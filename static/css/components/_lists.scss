// ========================================
// リスト・アイテムコンポーネント
// ========================================
@use '../base/variables' as var;

// ベースリストスタイル
// ----------------------------------------
%list-base {
    display: flex;
    flex-direction: column;
    gap: var.$spacing-sm;
    list-style: none;
    margin: 0;
    padding: 0;
}

// カテゴリーリスト
// ----------------------------------------
.category-list {
    @extend %list-base;
    gap: var.$spacing-xs;
}

.category-item {
    position: relative;
    display: flex;
    align-items: center;
    gap: var.$spacing-xs;
}

.category-button {
    flex: 1;
    padding: var.$spacing-sm;
    font-size: var.$font-size-md;
    font-weight: var.$font-weight-normal;
    text-align: left;
    color: var.$color-text-primary;
    background: transparent;
    border: none;
    border-radius: var.$border-radius-lg;
    cursor: pointer;
    transition: all var.$transition-base;
    letter-spacing: 0.01em;

    &:hover {
        background-color: var.$color-hover;
        box-shadow: var.$shadow-sm;
    }

    &:active {
        background-color: var.$color-active;
        transform: scale(0.98);
    }

    &.active {
        font-weight: var.$font-weight-bold;
        color: var.$color-accent-primary;
        background-color: var.$color-gray-100;
        box-shadow: var.$shadow-base;
    }

    // カスタム選択範囲
    &::selection {
        background-color: var.$color-gray-200;
        color: inherit;
    }

    &.active::selection {
        background-color: var.$color-gray-300;
        color: inherit;
    }
}

// タスクリスト
// ----------------------------------------
.task-list {
    @extend %list-base;
    min-height: 4rem;
    gap: var.$spacing-base;
}

.task-item {
    position: relative;
    display: flex;
    align-items: flex-start;
    gap: var.$spacing-sm;
    padding: var.$spacing-base;
    font-size: var.$font-size-base;
    color: var.$color-text-primary;
    background: var.$color-surface;
    border: var.$border-width-thin var.$border-style var.$color-border-light;
    border-radius: var.$border-radius-base;
    cursor: grab;
    transition: all var.$transition-base;

    &:hover {
        box-shadow: var.$shadow-hover;
        transform: translateY(-1px);
        border-color: var.$color-border-medium;
    }

    &:active {
        cursor: grabbing;
        transform: translateY(0);
    }

    // カスタム選択範囲
    &::selection {
        background-color: var.$color-gray-200;
        color: inherit;
    }
}

.task-title {
    flex: 1;
    font-weight: var.$font-weight-normal;
    line-height: var.$line-height-tight;
    word-wrap: break-word;

    &::selection {
        background-color: var.$color-gray-200;
        color: inherit;
    }
}

// 削除ボタン
// ----------------------------------------
.delete-btn {
    position: absolute;
    top: var.$spacing-xs;
    right: var.$spacing-xs;
    width: 1.5rem;
    height: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    background: var.$color-gray-100;
    color: var.$color-text-tertiary;
    border: none;
    border-radius: var.$border-radius-sm;
    font-size: var.$font-size-xs;
    cursor: pointer;
    opacity: 0;
    transition: all var.$transition-base;

    &:hover {
        background: var.$color-error;
        color: var.$color-text-inverse;
        opacity: 1 !important;
    }

    &.visible {
        opacity: 0.7;
    }

    &.hidden {
        display: none;
    }
}

// 削除ボタンの表示制御
.category-item:hover .delete-btn,
.task-item:hover .delete-btn {
    opacity: 0.7;
}

// 空の状態
// ----------------------------------------
.empty-state {
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 8rem;
    color: var.$color-text-tertiary;
    font-size: var.$font-size-sm;
    font-style: italic;
    text-align: center;
}