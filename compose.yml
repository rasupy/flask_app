
services:
  web:
    build: .
    ports:
      - "5000:5000"
    environment:
      - DOCKER_ENV=true
      - DB_HOST=db
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_NAME=${DB_NAME:-todo_db}
      - FLASK_ENV=${FLASK_ENV:-development}
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key}
      - DEFAULT_USER_NAME=${DEFAULT_USER_NAME:-開発ユーザー}
      - DEFAULT_USER_EMAIL=${DEFAULT_USER_EMAIL:-dev@example.com}
      - DEFAULT_USER_PASSWORD=${DEFAULT_USER_PASSWORD:-dev_password}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./:/app
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 10 &&
        python -c 'from flaskr.database import init_database; init_database()' &&
        python -m flask run --host=0.0.0.0 --port=5000 --debug
      "

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${DB_NAME:-todo_db}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: